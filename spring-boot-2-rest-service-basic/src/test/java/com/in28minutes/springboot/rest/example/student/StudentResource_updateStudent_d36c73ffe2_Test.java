// Test generated by RoostGPT for test RestBasicService using AI Type Open AI and AI Model gpt-4

package com.in28minutes.springboot.rest.example.student;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.http.ResponseEntity;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Optional;

@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class StudentResource_updateStudent_d36c73ffe2_Test {

    @InjectMocks
    private StudentResource studentResource;

    @Mock
    private StudentRepository studentRepository;

    @Test
    public void testUpdateStudent_Success() {
        Student student = new Student();
        student.setId(1L);
        student.setName("John Doe");
        student.setPassportNumber("A123456");

        when(studentRepository.findById(1L)).thenReturn(Optional.of(student));

        ResponseEntity<Object> responseEntity = studentResource.updateStudent(student, 1L);

        assertEquals(204, responseEntity.getStatusCodeValue());
    }

    @Test
    public void testUpdateStudent_NotFound() {
        Student student = new Student();
        student.setId(1L);
        student.setName("John Doe");
        student.setPassportNumber("A123456");

        when(studentRepository.findById(1L)).thenReturn(Optional.empty());

        ResponseEntity<Object> responseEntity = studentResource.updateStudent(student, 1L);

        assertEquals(404, responseEntity.getStatusCodeValue());
    }
}
