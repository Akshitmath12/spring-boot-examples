// Test generated by RoostGPT for test RestBasicService using AI Type Open AI and AI Model gpt-4

package com.in28minutes.springboot.rest.example.student;

import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.in28minutes.springboot.rest.example.student.Student;
import com.in28minutes.springboot.rest.example.student.StudentRepository;
import com.in28minutes.springboot.rest.example.student.StudentResource;

public class StudentResource_retrieveAllStudents_874a3b8f8a_Test {

    @InjectMocks
    private StudentResource studentResource;

    @Mock
    private StudentRepository studentRepository;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testRetrieveAllStudents() {
        Student student1 = new Student(1, "John", "Economics");
        Student student2 = new Student(2, "Jane", "Mathematics");

        when(studentRepository.findAll()).thenReturn(Arrays.asList(student1, student2));

        List<Student> result = studentResource.retrieveAllStudents();

        assertEquals(2, result.size());
        assertEquals("John", result.get(0).getName());
        assertEquals("Jane", result.get(1).getName());
    }

    @Test
    public void testRetrieveAllStudents_empty() {
        when(studentRepository.findAll()).thenReturn(Arrays.asList());

        List<Student> result = studentResource.retrieveAllStudents();

        assertEquals(0, result.size());
    }
}
