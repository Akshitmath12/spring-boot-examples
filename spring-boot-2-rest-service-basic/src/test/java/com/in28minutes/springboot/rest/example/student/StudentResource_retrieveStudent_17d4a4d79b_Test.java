// Test generated by RoostGPT for test RestBasicService using AI Type Open AI and AI Model gpt-4

package com.in28minutes.springboot.rest.example.student;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import java.util.Optional;

@ExtendWith(MockitoExtension.class)
public class StudentResource_retrieveStudent_17d4a4d79b_Test {

    @InjectMocks
    StudentResource studentResource;

    @Mock
    StudentRepository studentRepository;

    @Test
    public void testRetrieveStudentSuccess() {
        Student expectedStudent = new Student(1, "Test Student", "Test Course");
        when(studentRepository.findById(1L)).thenReturn(Optional.of(expectedStudent));

        Student actualStudent = studentResource.retrieveStudent(1);

        assertEquals(expectedStudent, actualStudent);
        verify(studentRepository, times(1)).findById(1L);
    }

    @Test
    public void testRetrieveStudentNotFound() {
        when(studentRepository.findById(1L)).thenReturn(Optional.empty());

        Exception exception = assertThrows(StudentNotFoundException.class, () -> {
            studentResource.retrieveStudent(1);
        });

        String expectedMessage = "id-1";
        String actualMessage = exception.getMessage();

        assertTrue(actualMessage.contains(expectedMessage));
        verify(studentRepository, times(1)).findById(1L);
    }
}
