// Test generated by RoostGPT for test RestBasicService using AI Type Open AI and AI Model gpt-4

package com.in28minutes.springboot.rest.example.student;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;

import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class StudentResource_retrieveStudent_17d4a4d79b_Test {

    @InjectMocks
    private StudentResource studentResource;

    @Mock
    private StudentRepository studentRepository;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testRetrieveStudent_WhenStudentExists() {
        Student mockStudent = new Student(1L, "John Doe", "A Course");
        when(studentRepository.findById(1L)).thenReturn(Optional.of(mockStudent));

        Student student = studentResource.retrieveStudent(1L);

        assertEquals("John Doe", student.getName());
        assertEquals("A Course", student.getCourse());
    }

    @Test
    public void testRetrieveStudent_WhenStudentDoesNotExist() {
        when(studentRepository.findById(1L)).thenReturn(Optional.empty());

        assertThrows(StudentNotFoundException.class, () -> {
            studentResource.retrieveStudent(1L);
        });
    }
}
