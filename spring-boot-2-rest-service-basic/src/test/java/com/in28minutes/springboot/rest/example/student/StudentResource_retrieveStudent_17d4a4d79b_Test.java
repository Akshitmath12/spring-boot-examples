// Test generated by RoostGPT for test RestBasicService using AI Type Open AI and AI Model gpt-4

package com.in28minutes.springboot.rest.example.student;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;

import java.util.Optional;

import com.in28minutes.springboot.rest.example.student.Student;
import com.in28minutes.springboot.rest.example.student.StudentNotFoundException;
import com.in28minutes.springboot.rest.example.student.StudentRepository;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
public class StudentResource_retrieveStudent_17d4a4d79b_Test {

    @Mock
    private StudentRepository studentRepository;

    @InjectMocks
    private StudentResource studentResource;

    @Test
    public void testRetrieveStudentSuccess() {
        Student expectedStudent = new Student("John", "Doe");
        when(studentRepository.findById(1L)).thenReturn(Optional.of(expectedStudent));

        Student actualStudent = studentResource.retrieveStudent(1L);

        assertEquals(expectedStudent, actualStudent);
    }

    @Test
    public void testRetrieveStudentNotFound() {
        when(studentRepository.findById(1L)).thenReturn(Optional.empty());

        assertThrows(StudentNotFoundException.class, () -> {
            studentResource.retrieveStudent(1L);
        });
    }
}
