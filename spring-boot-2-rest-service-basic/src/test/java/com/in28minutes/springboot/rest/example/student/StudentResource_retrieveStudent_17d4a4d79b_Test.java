// Test generated by RoostGPT for test RestBasicService using AI Type Open AI and AI Model gpt-4

package com.in28minutes.springboot.rest.example.student;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class StudentResource_retrieveStudent_17d4a4d79b_Test {

    @InjectMocks
    StudentResource studentResource;

    @Mock
    StudentRepository studentRepository;

    Student student;

    @BeforeEach
    public void setUp() {
        student = new Student(1L, "John Doe", "Hogwarts");
    }

    @Test
    public void testRetrieveStudent_whenStudentExists_thenStudentShouldBeReturned() {
        when(studentRepository.findById(1L)).thenReturn(Optional.of(student));

        Student actualStudent = studentResource.retrieveStudent(1L);

        verify(studentRepository, times(1)).findById(1L);
        assertEquals(student, actualStudent);
    }

    @Test
    public void testRetrieveStudent_whenStudentDoesNotExist_thenExceptionShouldBeThrown() {
        when(studentRepository.findById(1L)).thenReturn(Optional.empty());

        assertThrows(StudentNotFoundException.class, () -> studentResource.retrieveStudent(1L));
        verify(studentRepository, times(1)).findById(1L);
    }
}
